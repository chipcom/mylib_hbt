#include "function.ch"
/*
Алгоритм проверки ИНН1.Алгоритм проверки 10-го значного ИНН.
ИНН.10. 1) Находим произведения первых 9-ти цифр ИНН на специальные множители
           соотственно. 9 множителей ( 2 4 10 3 5 9 4 6 8 ).
ИНН.10. 2) Складываем все 9-ть получившихся произведений.
ИНН.10. 3) Получившуюся сумму делим на число 11 и извлекаем целую часть
           частного от деления.
ИНН.10. 4) Умножаем получившееся число на 11.
ИНН.10. 5) Сравниваем числа получившиеся на шаге 2 и шаге 4, их разница,
           и есть контрольное число, которое и должно равняться 10-й цифре
           в ИНН. (Если контрольное число получилось равным 10-ти, в этом
           случае принимаем контрольное число равным 0.)
*/
// функция проверки правильности ввода ИНН для физ.лица (12 знаков)
Function verify_INN(cInn, is_msg, fl_ret)
  Local a[12], i, val1, v, val2, d11, d12 := -1

  DEFAULT is_msg TO .f.
  fl_ret := .t.
  if empty(cInn)
    return .t.
  elseif len(alltrim(cInn)) < 12
    if is_msg
      func_error(4, 'ИНН для физического лица должен быть 12-тизначным')
    endif
    return .f.
  endif
  for i := 1 to 12
    a[i] := int(val(substr(cInn, i, 1)))
  next
  // 1) Находим произведения первых 10-ти цифр ИНН на специальные множители
  //    соотственно (10-ю цифру принимаем за 0 ????????).
  //    10 множителей ( 7 2 4 10 3 5 9 4 6 8 ).
  // 2) Складываем все 10-ть получившихся произведений.
  val1 := a[ 1] * 7 + ;
          a[ 2] * 2 + ;
          a[ 3] * 4 + ;
          a[ 4] * 10 + ;
          a[ 5] * 3 + ;
          a[ 6] * 5 + ;
          a[ 7] * 9 + ;
          a[ 8] * 4 + ;
          a[ 9] * 6 + ;
          a[10] * 8
  // 3) Получившуюся сумму делим на число 11 и извлекаем целую часть
  //    частного от деления.
  // 4) Умножаем получившееся число на 11.
  v := int(int(val1 / 11) * 11)
  // 5) Сравниваем числа получившиеся на шаге 2 и шаге 4, их разница,
  //    и есть первое контрольное число, которое и должно равняться
  //    11-й цифре в ИНН.(Если контрольное число получилось равным 10-ти,
  //    в этом случае принимаем контрольное число равным 0.)
  //    Если получившееся число не не равно 11-ой цифре ИНН, значит
  //    ИНН не верный, если же совпадает, тогда высчитываем следующее
  //    контрольное число, которое должно быть равным 12-ой цифре ИНН
  if (d11 := val1 - v) == 10
    d11 := 0
  endif
  if d11 == a[11]
    // 6) Находим произведения первых 11-ти цифр ИНН на специальные множители
    //    соотственно (10-ю цифру принимаем за 0).
    //    11 множителей ( 3 7 2 4 10 3 5 9 4 6 8 ).
    // 7) Складываем все 11-ть получившихся произведений.
    val2 := a[ 1] * 3 + ;
            a[ 2] * 7 + ;
            a[ 3] * 2 + ;
            a[ 4] * 4 + ;
            a[ 5] * 10 + ;
            a[ 6] * 3 + ;
            a[ 7] * 5 + ;
            a[ 8] * 9 + ;
            a[ 9] * 4 + ;
            a[10] * 6 + ;
            a[11] * 8
    // 8) Получившуюся сумму делим на число 11 и извлекаем целую часть
    //    частного от деления.
    // 9) Умножаем получившееся число на 11.
    v := int(int(val2 / 11) * 11)
    //10) Сравниваем числа получившиеся на шаге 7 и шаге 9, их разница и есть
    //    контрольное число, которое и должно равняться 12-й цифре в ИНН.
    //    (Если контрольное число получилось равным 10-ти, в этом случае
    //    принимаем контрольное число равным 0.) Если высчитанное число
    //    равно 12-ой цифре ИНН, и на первом этапе все контрольное число
    //    совпало с 11-ой цифрой ИНН, следовательно ИНН считается верным.
    if (d12 := val2 - v) == 10
      d12 := 0
    endif
  endif
  if d11 != a[11] .or. d12 != a[12]
    if is_msg
      func_error(2, 'Ошибка в подсчете контрольной суммы ИНН')
    endif
    fl_ret := .f.
  endif
  return .t.
